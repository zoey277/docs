import{_ as s,s as t,q as n,S as e}from"./chunks/framework.26d7e063.js";const v=JSON.parse(`{"title":"Titre et description","description":"","frontmatter":{"layout":"schema","code":"Schema.object({\\nfoo: Schema.boolean().description('*斜体*的属性描述。'),\\nbar: Schema.string().description('**粗体**的属性描述。'),\\n}).description('配置标题')\\n"},"headers":[],"relativePath":"fr-FR/schema/meta/description.md","filePath":"fr-FR/schema/meta/description.md"}`),a={name:"fr-FR/schema/meta/description.md"},o=e(`<h1 id="titre-et-description" tabindex="-1">Titre et description <a class="header-anchor" href="#titre-et-description" aria-label="Permalink to &quot;Titre et description&quot;">​</a></h1><p><code>.description()</code> 用于设置某个配置项的描述文本。当添加在属性上时会显示在名称下方，当添加在对象上时则会表现为小标题。我们还支持了基本的行内 Markdown 语法。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">object</span><span style="color:var(--shiki-token-text);">({</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">foo</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">boolean</span><span style="color:var(--shiki-token-text);">().</span><span style="color:var(--shiki-token-function);">description</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-string);">&#39;*斜体*的属性描述。&#39;</span><span style="color:var(--shiki-token-text);">),</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">bar</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">string</span><span style="color:var(--shiki-token-text);">().</span><span style="color:var(--shiki-token-function);">description</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-string);">&#39;**粗体**的属性描述。&#39;</span><span style="color:var(--shiki-token-text);">),</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">}).</span><span style="color:var(--shiki-token-function);">description</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-string);">&#39;配置标题&#39;</span><span style="color:var(--shiki-token-text);">)</span></span></code></pre></div>`,3),i=[o];function r(p,c,l,k,h,d){return n(),t("div",null,i)}const _=s(a,[["render",r]]);export{v as __pageData,_ as default};
