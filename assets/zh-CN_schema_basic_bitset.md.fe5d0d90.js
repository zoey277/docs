import{_ as s,s as n,q as a,S as t}from"./chunks/framework.3f494197.js";const x=JSON.parse(`{"title":"位集 (Bitset)","description":"","frontmatter":{"layout":"schema","code":"Schema.object({\\n  intents: Schema\\n    .bitset({ FOO: 1, BAR: 2, QUX: 4 })\\n    .default(5)\\n    .description('选择要启用的功能。'),\\n  array: Schema\\n    .array(Schema.union(['FOO', 'BAR', 'QUX']))\\n    .default(['FOO', 'QUX'])\\n    .role('checkbox')\\n    .description('选择要启用的功能。'),\\n}).description('配置项')\\n"},"headers":[],"relativePath":"zh-CN/schema/basic/bitset.md","filePath":"zh-CN/schema/basic/bitset.md"}`),e={name:"zh-CN/schema/basic/bitset.md"},o=t(`<h1 id="位集" tabindex="-1">位集 (Bitset) <a class="header-anchor" href="#位集" aria-label="Permalink to &quot;位集 (Bitset)&quot;">​</a></h1><p><code>Schema.bitset()</code> 以多选框的形式描述了一个整数，通常每一位表达某种特征。它的输出是一个整数，输入可以是一个整数或者一个字符串数组。</p><p>如果希望输出的也是字符串数组，可以配合使用 <code>Schema.array()</code> 和 <code>Schema.union()</code>，并将外观设置为 <code>checkbox</code>。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">enum</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Intents</span><span style="color:var(--shiki-token-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">FOO</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-number);">1</span><span style="color:var(--shiki-token-text);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">BAR</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-number);">2</span><span style="color:var(--shiki-token-text);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">QUX</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-number);">4</span><span style="color:var(--shiki-token-text);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">object</span><span style="color:var(--shiki-token-text);">({</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">intents</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">bitset</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-parameter);">Intents</span><span style="color:var(--shiki-token-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">    .</span><span style="color:var(--shiki-token-function);">default</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-constant);">Intents</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-parameter);">FOO</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-operator);">|</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Intents</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-parameter);">QUX</span><span style="color:var(--shiki-token-text);">),</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">array</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">array</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-constant);">Schema</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-function);">union</span><span style="color:var(--shiki-token-text);">([</span><span style="color:var(--shiki-token-string);">&#39;FOO&#39;</span><span style="color:var(--shiki-token-text);">, </span><span style="color:var(--shiki-token-string);">&#39;BAR&#39;</span><span style="color:var(--shiki-token-text);">, </span><span style="color:var(--shiki-token-string);">&#39;QUX&#39;</span><span style="color:var(--shiki-token-text);">]))</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">    .</span><span style="color:var(--shiki-token-function);">default</span><span style="color:var(--shiki-token-text);">([</span><span style="color:var(--shiki-token-string);">&#39;FOO&#39;</span><span style="color:var(--shiki-token-text);">, </span><span style="color:var(--shiki-token-string);">&#39;QUX&#39;</span><span style="color:var(--shiki-token-text);">])</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">    .</span><span style="color:var(--shiki-token-function);">role</span><span style="color:var(--shiki-token-text);">(</span><span style="color:var(--shiki-token-string);">&#39;checkbox&#39;</span><span style="color:var(--shiki-token-text);">),</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">})</span></span></code></pre></div>`,4),r=[o];function i(p,l,k,c,h,y){return a(),n("div",null,r)}const d=s(e,[["render",i]]);export{x as __pageData,d as default};
