import{_ as l,a as i}from"./chunks/home-light.974017f7.js";import{_ as r,p as c,s as p,D as s,I as a,S as n,v as e,L as t,q as h}from"./chunks/framework.3f494197.js";const R=JSON.parse('{"title":"Create a boilerplate","description":"","frontmatter":{"prev":{"text":"Installation","link":"/en-US/manual/starter/"},"next":{"text":"Install and Configure Plugins","link":"/zh-CN/manual/usage/market.html"}},"headers":[],"relativePath":"en-US/manual/starter/boilerplate.md","filePath":"en-US/manual/starter/boilerplate.md"}'),d={name:"en-US/manual/starter/boilerplate.md"},u=n('<h1 id="create-a-boilerplate" tabindex="-1">Create a boilerplate <a class="header-anchor" href="#create-a-boilerplate" aria-label="Permalink to &quot;Create a boilerplate&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you want to learn about other installation method, please visit <a href="./">Installation</a>.</p></div><p>In this section, we will talk about creating a template project, which is strongly recommended for developing Koishi. Comparing to build up a project from scratch, there are advantages with the template:</p><ul><li>Template One-click Creation. Create a project with full console experience and plugin templates with only one click</li><li>Fully TypeScript support. Enjoy the benefits of code hints and type checks.</li><li>Plugins Hot Reload. Get immediately feedback while changing plugin code without restarting the app.</li><li>Support Secondary Development. You could connect your own bot and others&#39; plugins for debugging.</li></ul><p>Of course, you could also use the template project in production. While it might be not convenient in operation, it would be more configurable than launchers. Template project could also be easily launched in case that launchers wouldn&#39;t work.</p><h2 id="install-node-js" tabindex="-1">Install Node.js <a class="header-anchor" href="#install-node-js" aria-label="Permalink to &quot;Install Node.js&quot;">​</a></h2><p>Koishi requires <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a> (at least v16, suggested to use LTS versions) Runtime, you need to install it.</p><h3 id="download-installer" tabindex="-1">Download Installer <a class="header-anchor" href="#download-installer" aria-label="Permalink to &quot;Download Installer&quot;">​</a></h3><p>Firstly, we should go to the official website of <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a>:</p><p class="dark-only"><img src="'+l+'" alt="home"></p><p class="light-only"><img src="'+i+`" alt="home"></p><p>So we see here are two green buttons, which are <strong>LTS (Long-term Support version)</strong> and <strong>Current (the Latest version)</strong>. The stable LTS version is recommended. Click the button to download the installer.</p><p>Then, launch the installer you just downloaded, complete the installation process.</p><h3 id="npm" tabindex="-1">NPM <a class="header-anchor" href="#npm" aria-label="Permalink to &quot;NPM&quot;">​</a></h3><p><a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">NPM</a> is the built-in package manager of Node.js, you could use it directly. We also recommend the powerful <a href="https://classic.yarnpkg.com/" target="_blank" rel="noreferrer">Yarn</a> as the package manager. It is very simple to install Yarn, just enter the following command into command line.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#7F848E;font-style:italic;"># install yarn</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">npm</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-string);">i</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-number);">-g</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-string);">yarn</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># check yarn version</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">yarn</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-number);">-v</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Some Windows users may get errors like below (<a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_execution_policies" target="_blank" rel="noreferrer">Reference Link</a>)：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:var(--shiki-token-text);">yarn: File yarn.ps1 cannot be loaded because running scripts is disabled on this system.</span></span></code></pre></div><p>Now start a (PowerShell) terminal with elevated permission (as Administrator), run the command below:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:var(--shiki-token-function);">Set-ExecutionPolicy</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-string);">RemoteSigned</span></span></code></pre></div><p>Then you can use Yarn normally.</p></div><h3 id="configure-registry-mirror" tabindex="-1">Configure Registry Mirror <a class="header-anchor" href="#configure-registry-mirror" aria-label="Permalink to &quot;Configure Registry Mirror&quot;">​</a></h3><p>If you live in Chinese mainland, it might be very slow when you download dependencies from npm or yarn. Therefore, it is recommended to configure a registry mirror to speed up the installation process.</p>`,19),k=e("div",{class:"language-npm"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"npm"),e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"npm"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"config"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"set"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"registry"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"https://registry.npmmirror.com")])])])],-1),y=e("div",{class:"language-yarn"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"yarn"),e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"yarn"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"config"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"set"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"registry"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"https://registry.npmmirror.com")])])])],-1),m=n('<h2 id="create-a-project" tabindex="-1">Create a Project <a class="header-anchor" href="#create-a-project" aria-label="Permalink to &quot;Create a Project&quot;">​</a></h2><p>Open a command line, cd to the directory that you want to create a Koishi template project.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The working directory path should not be very long, also it is recommended to use a path that contains ASCII characters only without spaces. For example:</p><ul><li>Windows：<code>C:\\dev</code> or <code>D:\\dev</code> (do not create projects directly at the root of the disk, preferably build a folder)</li><li>Other operating systems: <code>~/dev</code></li></ul></div><p>Enter the following command to create Koishi template project:</p>',4),g=e("div",{class:"language-npm"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"npm"),e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"npm"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"i"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-number)"}},"-g"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"create-koishi@latest")]),t(`
`),e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"npm"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"init"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"koishi")])])])],-1),v=e("div",{class:"language-yarn"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"yarn"),e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"yarn"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"create"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"koishi")])])])],-1),b=e("p",null,"Follow the prompts and finalize the initialization process.",-1),f=e("h2",{id:"launch-the-application",tabindex:"-1"},[t("Launch the Application "),e("a",{class:"header-anchor",href:"#launch-the-application","aria-label":'Permalink to "Launch the Application"'},"​")],-1),_=e("p",null,[t("If you have successfully finalized the operations above, your application should be already launched, the Koishi Console Web UI should be also opened. If you want to terminate the application, you could press "),e("code",null,"Ctrl + C"),t(" combination keys. When your application is terminated, you could enter the following command to launch it again:")],-1),w=e("div",{class:"language-npm"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"npm"),e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"npm"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"start")])])])],-1),x=e("div",{class:"language-yarn"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"yarn"),e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"var(--shiki-token-function)"}},"yarn"),e("span",{style:{color:"var(--shiki-token-text)"}}," "),e("span",{style:{color:"var(--shiki-token-string)"}},"start")])])])],-1),C=e("h2",{id:"what-s-next",tabindex:"-1"},[t("What's Next... "),e("a",{class:"header-anchor",href:"#what-s-next","aria-label":`Permalink to "What's Next..."`},"​")],-1),I=e("p",null,"Congratulations on mastering the basic of Koishi! Moving forward:",-1),P=e("ul",null,[e("li",null,[t("If you want to know more features about Koishi, please refer to "),e("a",{href:"./../usage/market.html"},"Install and Configure Plugins")]),e("li",null,[t("If you're interested in developing your own plugin immediately, please proceed to the "),e("a",{href:"./../../guide/"},"Developing Guide"),t(".")])],-1);function T(S,j,N,q,A,D){const o=c("tab-select");return h(),p("div",null,[u,s(o,{class:"code"},{"tab-npm":a(()=>[k]),"tab-yarn":a(()=>[y]),_:1}),m,s(o,{class:"code"},{"tab-npm":a(()=>[g]),"tab-yarn":a(()=>[v]),_:1}),b,f,_,s(o,{class:"code"},{"tab-npm":a(()=>[w]),"tab-yarn":a(()=>[x]),_:1}),C,I,P])}const V=r(d,[["render",T]]);export{R as __pageData,V as default};
