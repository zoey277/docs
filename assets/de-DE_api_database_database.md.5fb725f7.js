import{_ as l,p as r,s as i,v as a,L as s,D as e,I as n,S as o,q as p}from"./chunks/framework.26d7e063.js";const S=JSON.parse('{"title":"数据库操作 (Database)","description":"","frontmatter":{},"headers":[],"relativePath":"de-DE/api/database/database.md","filePath":"de-DE/api/database/database.md"}'),c={name:"de-DE/api/database/database.md"},k=o(`<h1 id="数据库操作" tabindex="-1">数据库操作 (Database) <a class="header-anchor" href="#数据库操作" aria-label="Permalink to &quot;数据库操作 (Database)&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>参见：<a href="./../../guide/database/">开发 &gt; 数据库 &gt; 基本用法</a></p></div><p>Koishi 的数据库 API 实际上分为两部分：</p><ul><li>Minato 定义的通用数据库接口，由数据库插件实现</li><li>Koishi 内置数据结构相关的方法，由 Koishi 提供实现</li></ul><p>这一页中将仅展示第一部分的内容。另一部分的内容请参见 <a href="./built-in.html">内置数据结构</a>。</p><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="tablelike" tabindex="-1">TableLike <a class="header-anchor" href="#tablelike" aria-label="Permalink to &quot;TableLike&quot;">​</a></h3><p>一个可用表。该类型可以是数据库中现有的表名或者一个 <a href="./selection.html"><code>Selection</code></a> 对象。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">TableLike</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">&gt; </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">keyof</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);"> | </span><span style="color:var(--shiki-token-constant);">Selection</span></span></code></pre></div><h3 id="tablejoin" tabindex="-1">TableJoin <a class="header-anchor" href="#tablejoin" aria-label="Permalink to &quot;TableJoin&quot;">​</a></h3><p>将多个表连接成新的虚拟表。该类型可以是表名数组或者一个由 <code>TableLike</code> 构成的字典。如果是表名数组，则新的表将会使用这些表名作为字段名；否则将会使用字典的键作为字段名。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">TableJoin</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">&gt; </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> (</span><span style="color:var(--shiki-token-keyword);">keyof</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">)[] | </span><span style="color:var(--shiki-token-constant);">Dict</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">TableLike</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">&gt;&gt;</span></span></code></pre></div><h3 id="modifier" tabindex="-1">Modifier <a class="header-anchor" href="#modifier" aria-label="Permalink to &quot;Modifier&quot;">​</a></h3><p>对查询的结果进行修饰，包括限制数量、选取字段和排序。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Modifier</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-token-text);">&gt; </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);">[] | </span><span style="color:var(--shiki-token-constant);">ModifierOptions</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">interface</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">ModifierOptions</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);">&gt; {</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">limit</span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">number</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">offset</span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">number</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">fields</span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);">[]</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">sort</span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Dict</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-string);">&#39;asc&#39;</span><span style="color:var(--shiki-token-text);"> | </span><span style="color:var(--shiki-token-string);">&#39;desc&#39;</span><span style="color:var(--shiki-token-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">}</span></span></code></pre></div><h3 id="update" tabindex="-1">Update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;Update&quot;">​</a></h3><p>要更新的数据。包含任意多个字段，每个字段的值可以是一个固定值或者求值表达式。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Uneval</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">T</span><span style="color:var(--shiki-token-text);">&gt; </span><span style="color:var(--shiki-token-operator);">=</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  | </span><span style="color:var(--shiki-token-constant);">T</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">number</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Eval</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-constant);">Number</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">T</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Eval</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-constant);">String</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">T</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Eval</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-constant);">Boolean</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">T</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Date</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Eval</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-constant);">Date</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">T</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">RegExp</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Eval</span><span style="color:var(--shiki-token-text);">.</span><span style="color:var(--shiki-token-constant);">RegExp</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">T</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">type</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Update</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">&gt; </span><span style="color:var(--shiki-token-operator);">=</span><span style="color:var(--shiki-token-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  [</span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-keyword);">keyof</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">]</span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Uneval</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">S</span><span style="color:var(--shiki-token-text);">[</span><span style="color:var(--shiki-token-constant);">K</span><span style="color:var(--shiki-token-text);">]&gt;</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">}</span></span></code></pre></div><h3 id="stats" tabindex="-1">Stats <a class="header-anchor" href="#stats" aria-label="Permalink to &quot;Stats&quot;">​</a></h3><p>数据库统计信息。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:var(--shiki-token-keyword);">interface</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">Stats</span><span style="color:var(--shiki-token-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">size</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">number</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">tables</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">Dict</span><span style="color:var(--shiki-token-text);">&lt;</span><span style="color:var(--shiki-token-constant);">TableStats</span><span style="color:var(--shiki-token-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">interface</span><span style="color:var(--shiki-token-text);"> </span><span style="color:var(--shiki-token-constant);">TableStats</span><span style="color:var(--shiki-token-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">count</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">number</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">  </span><span style="color:var(--shiki-token-parameter);">size</span><span style="color:var(--shiki-token-text);">: </span><span style="color:var(--shiki-token-constant);">number</span></span>
<span class="line"><span style="color:var(--shiki-token-text);">}</span></span></code></pre></div><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2><h3 id="ctx-database-select" tabindex="-1">ctx.database.select(table, query?) <a class="header-anchor" href="#ctx-database-select" aria-label="Permalink to &quot;ctx.database.select(table, query?)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>query:</strong> <a href="./query.html"><code>Query</code></a> 约束条件</li><li>返回值: <a href="./selection.html"><code>Selection</code></a></li></ul><p>创建一个新的 <code>Selection</code> 对象。</p>`,25),h={id:"ctx-database-join-实验性",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#ctx-database-join-实验性","aria-label":'Permalink to "ctx.database.join(tables, query?) <badge type="warning">实验性</badge>"'},"​",-1),y=o('<ul><li><strong>tables:</strong> <a href="#tablejoin"><code>TableJoin</code></a> 用于连接的表</li><li><strong>query:</strong> <a href="./selection.html#callback"><code>Callback</code></a> 约束条件</li><li>返回值: <a href="./selection.html"><code>Selection</code></a></li></ul><p>将多个表连接成新的虚拟表。</p><h3 id="ctx-database-get" tabindex="-1">ctx.database.get(table, query, modifier?) <a class="header-anchor" href="#ctx-database-get" aria-label="Permalink to &quot;ctx.database.get(table, query, modifier?)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>query:</strong> <a href="./query.html"><code>Query</code></a> 约束条件</li><li><strong>modifier:</strong> <a href="#modifier"><code>Modifier</code></a> 请求修饰符</li><li>返回值: <code>Promise&lt;any[]&gt;</code></li></ul><p>查询数据。</p><h3 id="ctx-database-set" tabindex="-1">ctx.database.set(table, query, update) <a class="header-anchor" href="#ctx-database-set" aria-label="Permalink to &quot;ctx.database.set(table, query, update)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>query:</strong> <a href="./query.html"><code>Query</code></a> 约束条件</li><li><strong>update:</strong> <a href="#update"><code>Update</code></a> 数据</li><li>返回值: <code>Promise&lt;void&gt;</code></li></ul><p>更新数据。</p><h3 id="ctx-database-remove" tabindex="-1">ctx.database.remove(table, query) <a class="header-anchor" href="#ctx-database-remove" aria-label="Permalink to &quot;ctx.database.remove(table, query)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>query:</strong> <a href="./query.html"><code>Query</code></a> 约束条件</li><li>返回值: <code>Promise&lt;void&gt;</code></li></ul><p>删除数据。</p><h3 id="ctx-database-create" tabindex="-1">ctx.database.create(table, data) <a class="header-anchor" href="#ctx-database-create" aria-label="Permalink to &quot;ctx.database.create(table, data)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>data:</strong> <code>any</code> 数据</li><li>返回值: <code>Promise&lt;void&gt;</code></li></ul><p>插入数据。</p><h3 id="ctx-database-upsert" tabindex="-1">ctx.database.upsert(table, data, keys?) <a class="header-anchor" href="#ctx-database-upsert" aria-label="Permalink to &quot;ctx.database.upsert(table, data, keys?)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>data:</strong> <a href="#update"><code>Update[]</code></a> 数据</li><li><strong>keys:</strong> <code>string | string[]</code> 用于索引的字段</li><li>返回值: <code>Promise&lt;void&gt;</code></li></ul><p>插入或更新数据。</p><h3 id="ctx-database-eval" tabindex="-1">ctx.database.eval(table, expr, query?) <a class="header-anchor" href="#ctx-database-eval" aria-label="Permalink to &quot;ctx.database.eval(table, expr, query?)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li><strong>expr:</strong> <a href="./selection.html#callback"><code>Callback</code></a> 用于计算的表达式</li><li><strong>query:</strong> <a href="./query.html"><code>Query</code></a> 约束条件</li><li>返回值: <code>Promise&lt;any&gt;</code></li></ul><p>计算聚合表达式。</p><h3 id="ctx-database-drop" tabindex="-1">ctx.database.drop(table) <a class="header-anchor" href="#ctx-database-drop" aria-label="Permalink to &quot;ctx.database.drop(table)&quot;">​</a></h3><ul><li><strong>table:</strong> <code>string</code> 表名</li><li>返回值: <code>Promise&lt;void&gt;</code></li></ul><p>删除表。</p>',23),v={id:"ctx-database-stats-实验性",tabindex:"-1"},x=a("a",{class:"header-anchor",href:"#ctx-database-stats-实验性","aria-label":'Permalink to "ctx.database.stats() <badge type="warning">实验性</badge>"'},"​",-1),b=a("ul",null,[a("li",null,[s("返回值: "),a("a",{href:"#stats"},[a("code",null,"Promise<Stats>")])])],-1),u=a("p",null,"获取统计信息。",-1);function g(m,f,q,_,w,P){const t=r("badge");return p(),i("div",null,[k,a("h3",h,[s("ctx.database.join(tables, query?) "),e(t,{type:"warning"},{default:n(()=>[s("实验性")]),_:1}),s(),d]),y,a("h3",v,[s("ctx.database.stats() "),e(t,{type:"warning"},{default:n(()=>[s("实验性")]),_:1}),s(),x]),b,u])}const C=l(c,[["render",g]]);export{S as __pageData,C as default};
